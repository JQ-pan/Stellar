{"version":3,"file":"main.js","mappings":"qCAEOA,eAAeC,EAAeC,GAQjCC,MAFa,mFAA2DD,WALxD,CACZE,OAAQ,QAOPC,MAAKC,IACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,+BAEpB,OAAOF,EAASG,MAAM,IAEzBJ,MAAKK,KCjBd,SAAoBA,GAChB,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAOF,SAASC,cAAc,SAC9BE,EAAOH,SAASC,cAAc,SAC9BG,EAAcJ,SAASC,cAAc,gBACrCI,EAAWL,SAASC,cAAc,aAClCK,EAAON,SAASC,cAAc,SAOpCF,EAAKQ,UAAY,cAAgBT,EAAKU,SAASC,KAC/CP,EAAKK,UAAYT,EAAKY,QAAQC,OAAS,KACvCR,EAAKS,IAAMd,EAAKY,QAAQG,UAAUV,KAClCC,EAAYG,UAAYT,EAAKY,QAAQG,UAAUC,KAC/CT,EAASE,UAAY,aAAeT,EAAKY,QAAQL,SAAW,IAC5DC,EAAKC,UAAY,eAAiBT,EAAKY,QAAQK,SAAW,QAE1Df,SAASC,cAAc,YAAYe,UAAUC,OAAO,WAEpD,MAAMC,EAAOlB,SAASmB,qBAAqB,QAAQ,GAE7CC,EAAatB,EAAKU,SAASC,KAAKY,MAAM,KAAKC,KAAK,IAAIC,cAC1DL,EAAKM,MAAMC,gBAAkB,8CAAgDL,EAAa,IAC9F,CDRYM,CAAW5B,EAAK,IAEnB6B,OAAMC,IACHC,QAAQD,MAAM,SAAUA,EAAM,GAE1C,CEnBA5B,SAAS8B,iBAAiB,oBAAoB,KAGrB9B,SAAS+B,eAAe,gBAChCD,iBAAiB,SAAS,SAASE,GAE5C3C,EADcW,SAAS+B,eAAe,eAAeE,MAEzD,IAGAC,OAAOJ,iBAAiB,SAAS,SAASE,GACpB,UAAdA,EAAMG,KACN9C,EAAeW,SAAS+B,eAAe,eAAeE,MAE9D,IAEAJ,QAAQO,IAAI,OAASC,KACrBR,QAAQO,IAAIC,KACZR,QAAQO,IAAI,cAAgBE,UAC5BT,QAAQO,IAAIE,UAMZjD,EAAe,SC1BfiD,SAASC,YAAc,gGACX,IAAID,SAASE,IAAI,CACzBC,UAAW,MAEXjB,MAAO,uDACPkB,OAAQ,EAAE,GAAM,MAChBC,KAAM,IDqBF,G","sources":["webpack://javascript_project/./src/scripts/weather.js","webpack://javascript_project/./src/scripts/renderData.js","webpack://javascript_project/./src/index.js","webpack://javascript_project/./src/scripts/getMap.js"],"sourcesContent":["import renderData from \"./renderData\";\n\nexport async function getWeatherData(userInput) {\n    const options = {\n        method: 'GET',\n    }\n    \n    const token = \"c4883df403d644f59b1233931231501\"\n    const url = `http://api.weatherapi.com/v1/current.json?key=${token}&q=${userInput}&aqi=no`\n\n    fetch(url, options)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Network response was not OK');\n            }\n            return response.json();\n        })\n        .then(data => {\n            renderData(data);\n        })\n        .catch(error => {\n            console.error(\"ERROR:\", error);\n        });\n}\n","function renderData(data) {\n    const city = document.querySelector(\".city\");\n    const temp = document.querySelector(\".temp\");\n    const icon = document.querySelector(\".icon\")\n    const description = document.querySelector(\".description\");\n    const humidity = document.querySelector(\".humidity\");\n    const wind = document.querySelector(\".wind\");\n\n    // const long = Number(data.location.lon);\n    // const latt = Number(data.location.lat);\n\n    // console.log(long, latt)\n\n    city.innerText = \"Weather in \" + data.location.name;\n    temp.innerText = data.current.temp_f + \"Â°F\";\n    icon.src = data.current.condition.icon;\n    description.innerText = data.current.condition.text;\n    humidity.innerText = \"Humidity: \" + data.current.humidity + \"%\";\n    wind.innerText = \"Wind speed: \" + data.current.gust_mph + \" mi/h\";\n    \n    document.querySelector(\".weather\").classList.remove(\"loading\");\n\n    const body = document.getElementsByTagName(\"BODY\")[0];\n\n    const searchTerm = data.location.name.split(\" \").join(\"\").toLowerCase();\n    body.style.backgroundImage = \"url('https://source.unsplash.com/1600x900/?\" + searchTerm + \"')\"\n}\n\nexport default renderData","// Import method from weather script\nimport { getWeatherData } from \"./scripts/weather\";\nimport { getMap } from \"./scripts/getMap\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    \n    // Add the method to the window\n    const searchButton = document.getElementById(\"searchButton\");\n    searchButton.addEventListener(\"click\", function(event) {\n        const input = document.getElementById(\"searchInput\").value;\n        getWeatherData(input);\n    })\n\n    // const searchInput = document.getElementById(\"searchInput\");\n    window.addEventListener(\"keyup\", function(event) {\n        if (event.key === \"Enter\") {\n            getWeatherData(document.getElementById(\"searchInput\").value)\n        }\n    })\n\n    console.log(\"Map:\" + map);\n    console.log(map);\n    console.log(\".mapboxgl: \" + mapboxgl);\n    console.log(mapboxgl);\n\n    // window.getMap = getMap;\n\n\n\n    getWeatherData('10001');\n    getMap();\n})\n\n\n","import renderData  from \"./renderData\";\n\nexport function getMap() {\n    mapboxgl.accessToken = 'pk.eyJ1IjoiamlvbmdxaXBhbiIsImEiOiJjbGQwazA3eXgyeWJkM3BrNmI5bjFtcXF1In0.K6FfXFCQgn5x31jHvjaW2Q';\n    const map = new mapboxgl.Map({\n        container: 'map', // container ID\n        // Choose from Mapbox's core styles, or make your own style with Mapbox Studio\n        style: 'mapbox://styles/jiongqipan/cld0k1ilh000515qffkp57mli', // style URL\n        center: [-74.0, 40.7], // starting position [lng, lat]\n        zoom: 11 // starting zoom\n    });\n    // const mapCanary = document.querySelector(\".mapboxgl-map\");\n    // mapCanary.style.overflow = \"visible\"\n\n}"],"names":["async","getWeatherData","userInput","fetch","method","then","response","ok","Error","json","data","city","document","querySelector","temp","icon","description","humidity","wind","innerText","location","name","current","temp_f","src","condition","text","gust_mph","classList","remove","body","getElementsByTagName","searchTerm","split","join","toLowerCase","style","backgroundImage","renderData","catch","error","console","addEventListener","getElementById","event","value","window","key","log","map","mapboxgl","accessToken","Map","container","center","zoom"],"sourceRoot":""}