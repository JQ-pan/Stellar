{"version":3,"file":"main.js","mappings":"qCAEOA,eAAeC,EAAeC,GASjCC,MAFa,oFAA4DD,4BANzD,CACZE,OAAQ,QAQPC,MAAKC,IACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,+BAEpB,OAAOF,EAASG,MAAM,IAEzBJ,MAAKK,KChBd,SAAoBA,GAChB,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAOF,SAASC,cAAc,SAC9BE,EAAOH,SAASC,cAAc,SAC9BG,EAAcJ,SAASC,cAAc,gBACrCI,EAAWL,SAASC,cAAc,aAClCK,EAAON,SAASC,cAAc,SAE9BM,EAAOP,SAASC,cAAc,SAC9BO,EAAMR,SAASC,cAAc,QCXhC,IAAgBQ,EAAMC,EAAND,EDaNE,WAAWb,EAAKc,SAASC,KCbbH,EDcZC,WAAWb,EAAKc,SAASE,KCbtCC,SAASC,YAAc,gGAEX,IAAID,SAASE,IAAI,CACzBC,UAAW,MAEXC,MAAO,uDACPC,OAAQ,EAAE,MAAO,OACjBC,KAAM,KAENC,MAAM,CAENF,OAAQ,CAACX,EAAMC,GACfa,WAAW,IDUfxB,EAAKyB,UAAY,cAAgB1B,EAAKc,SAASa,KAC/CvB,EAAKsB,UAAY1B,EAAK4B,QAAQC,OAAS,KACvCxB,EAAKyB,IAAM9B,EAAK4B,QAAQG,UAAU1B,KAClCC,EAAYoB,UAAY1B,EAAK4B,QAAQG,UAAUC,KAC/CzB,EAASmB,UAAY,aAAe1B,EAAK4B,QAAQrB,SAAW,IAC5DC,EAAKkB,UAAY,eAAiB1B,EAAK4B,QAAQK,SAAW,QAE1DxB,EAAKiB,UAAY,OAAS1B,EAAKkC,SAASC,YAAY,GAAGC,IAAIC,UAAY,KACvE3B,EAAIgB,UAAY,OAAS1B,EAAKkC,SAASC,YAAY,GAAGC,IAAIE,UAAY,KAEtEpC,SAASC,cAAc,YAAYoC,UAAUC,OAAO,WAEpD,MAAMC,EAAOvC,SAASwC,qBAAqB,QAAQ,GAE7CC,EAAa3C,EAAKc,SAASa,KAAKiB,MAAM,KAAKC,KAAK,IAAIC,cAC1DL,EAAKpB,MAAM0B,gBAAkB,8CAAgDJ,EAAa,IAE9F,CDrBYK,CAAWhD,EAAK,IAEnBiD,OAAMC,IACHC,QAAQD,MAAM,SAAUA,EAAM,GAI1C,CGvBAhD,SAASkD,iBAAiB,oBAAoB,KAE1C,MAAMC,EAAcnD,SAASoD,eAAe,eACvBpD,SAASoD,eAAe,gBAEhCF,iBAAiB,SAAS,SAASG,GAE5ChE,EADc8D,EAAYG,MAE9B,IAEAC,OAAOL,iBAAiB,SAAS,SAASG,GACpB,UAAdA,EAAMG,KACNnE,EAAe8D,EAAYG,MAEnC,IAEAjE,EAAe,QAAQ,G","sources":["webpack://javascript_project/./src/scripts/weather.js","webpack://javascript_project/./src/scripts/renderData.js","webpack://javascript_project/./src/scripts/getMap.js","webpack://javascript_project/./src/index.js"],"sourcesContent":["import renderData from \"./renderData\";\n\nexport async function getWeatherData(userInput) {\n    const options = {\n        method: 'GET',\n    }\n\n    const token = \"c4883df403d644f59b1233931231501\"\n\n    const url = `http://api.weatherapi.com/v1/forecast.json?key=${token}&q=${userInput}&days=1&aqi=no&alerts=no`\n\n    fetch(url, options)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Network response was not OK');\n            }\n            return response.json();\n        })\n        .then(data => {\n            renderData(data);\n        })\n        .catch(error => {\n            console.error(\"ERROR:\", error);\n        });\n\n    \n}\n","import { getMap } from \"./getMap\";\n\nfunction renderData(data) {\n    const city = document.querySelector(\".city\");\n    const temp = document.querySelector(\".temp\");\n    const icon = document.querySelector(\".icon\")\n    const description = document.querySelector(\".description\");\n    const humidity = document.querySelector(\".humidity\");\n    const wind = document.querySelector(\".wind\");\n\n    const high = document.querySelector(\".high\")\n    const low = document.querySelector(\".low\")\n\n    const long = parseFloat(data.location.lon);\n    const latt = parseFloat(data.location.lat);\n    \n    getMap(long, latt);\n    \n    // map.flyTo({\n    //     center: [long, latt],\n    //     essential: true // this animation is considered essential with respect to prefers-reduced-motion\n    // });\n\n    city.innerText = \"Weather in \" + data.location.name;\n    temp.innerText = data.current.temp_f + \"°F\";\n    icon.src = data.current.condition.icon;\n    description.innerText = data.current.condition.text;\n    humidity.innerText = \"Humidity: \" + data.current.humidity + \"%\";\n    wind.innerText = \"Wind speed: \" + data.current.gust_mph + \" mi/h\";\n\n    high.innerText = \"Hi: \" + data.forecast.forecastday[0].day.maxtemp_f + \"°F\";\n    low.innerText = \"Lo: \" + data.forecast.forecastday[0].day.mintemp_f + \"°F\";\n\n    document.querySelector(\".weather\").classList.remove(\"loading\");\n\n    const body = document.getElementsByTagName(\"BODY\")[0];\n\n    const searchTerm = data.location.name.split(\" \").join(\"\").toLowerCase();\n    body.style.backgroundImage = \"url('https://source.unsplash.com/1600x900/?\" + searchTerm + \"')\"\n\n}\n\nexport default renderData","export function getMap(long, latt) {\n    mapboxgl.accessToken = 'pk.eyJ1IjoiamlvbmdxaXBhbiIsImEiOiJjbGQwazA3eXgyeWJkM3BrNmI5bjFtcXF1In0.K6FfXFCQgn5x31jHvjaW2Q';\n\n    const map = new mapboxgl.Map({\n        container: 'map', // container ID\n        // Choose from Mapbox's core styles, or make your own style with Mapbox Studio\n        style: 'mapbox://styles/jiongqipan/cld0k1ilh000515qffkp57mli', // style URL\n        center: [-74.01, 40.71], // starting position [lng, lat]\n        zoom: 11 // starting zoom\n    });\n    map.flyTo({\n        // Fly to a random location\n        center: [long, latt],\n        essential: true // this animation is considered essential with respect to prefers-reduced-motion\n    });\n}","import { getWeatherData } from \"./scripts/weather\";\nimport { getMap } from \"./scripts/getMap\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n    const searchInput = document.getElementById(\"searchInput\");\n    const searchButton = document.getElementById(\"searchButton\");\n    \n    searchButton.addEventListener(\"click\", function(event) {\n        const input = searchInput.value;\n        getWeatherData(input);\n    })\n\n    window.addEventListener(\"keyup\", function(event) {\n        if (event.key === \"Enter\") {\n            getWeatherData(searchInput.value)\n        }\n    })\n    \n    getWeatherData('10001');\n})\n\n\n"],"names":["async","getWeatherData","userInput","fetch","method","then","response","ok","Error","json","data","city","document","querySelector","temp","icon","description","humidity","wind","high","low","long","latt","parseFloat","location","lon","lat","mapboxgl","accessToken","Map","container","style","center","zoom","flyTo","essential","innerText","name","current","temp_f","src","condition","text","gust_mph","forecast","forecastday","day","maxtemp_f","mintemp_f","classList","remove","body","getElementsByTagName","searchTerm","split","join","toLowerCase","backgroundImage","renderData","catch","error","console","addEventListener","searchInput","getElementById","event","value","window","key"],"sourceRoot":""}